---
name: Build & Release
on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY: ${{ secrets.S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY }}
      S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY: ${{ secrets.S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      MARKDOWN2HTML_MAVEN_PLUGIN_FAIL_ON_ERROR: true
    steps:
      - name: 🧱 Setup Maven Action
        uses: s4u/setup-maven-action@2f53a7669c7543a045d0bb6c92436df0c5a726f8  # v1.14.0
        with:
          java-version: 17
          java-distribution: temurin
          checkout-fetch-depth: 1
          checkout-persist-credentials: false
          settings-repositories: |
            [
              {
                "id": "s3",
                "name": "s3.sbb.polarion.maven.repo",
                "url": "s3://sbb-polarion-maven-repo/polarion.mvn",
                "releases": {
                  "enabled": "true",
                  "updatePolicy": "never"
                }
              }
            ]
          settings-servers: |
            [
              {
                "id": "s3",
                "username": "${env.S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY}",
                "password": "${env.S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY}"
              }
            ]
      - name: 📝 Get the project version
        id: project_version
        run: echo "project_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"
      - name: 📝 Store cache key
        id: cache_key
        run: echo "cache_key=${{ runner.os }}-mvn-${{ hashFiles('**/pom.xml') }}-${{ github.sha }}" >> "$GITHUB_OUTPUT"
      - name: 🔘 Print settings.xml
        run: cat /home/runner/.m2/settings.xml
      - name: 📦 Build with Maven for Pushes
        if: github.event_name == 'push'
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
        run: mvn --batch-mode clean package sonar:sonar -Dsonar.branch.name="${GITHUB_HEAD_REF}"
      - name: 📦 Build with Maven for PRs
        if: github.event_name == 'pull_request'
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_BASE_REF: ${{ github.base_ref }}
          GITHUB_PR_NUMBER_REF: ${{ github.event.pull_request.number }}
        run: mvn --batch-mode clean package sonar:sonar -Dsonar.pullrequest.base="${GITHUB_HEAD_REF}" -Dsonar.pullrequest.branch="${GITHUB_BASE_REF}" -Dsonar.pullrequest.key="${GITHUB_PR_NUMBER_REF}"
    outputs:
      project_version: ${{ steps.project_version.outputs.project_version }}
      cache_key: ${{ steps.cache_key.outputs.cache_key }}
  deploy-maven-central:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    if: ${{ !endsWith(needs.build.outputs.project_version, '-SNAPSHOT') && github.ref == 'refs/heads/main' }}
    env:
      S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY: ${{ secrets.S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY }}
      S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY: ${{ secrets.S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY }}
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_USERNAME: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_USERNAME }}
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_TOKEN: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_TOKEN }}
      COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE }}
    steps:
      - name: 🧱 Setup Maven Action
        uses: s4u/setup-maven-action@2f53a7669c7543a045d0bb6c92436df0c5a726f8  # v1.14.0
        with:
          java-version: 17
          java-distribution: temurin
          checkout-fetch-depth: 1
          settings-repositories: |
            [
              {
                "id": "s3",
                "name": "s3.sbb.polarion.maven.repo",
                "url": "s3://sbb-polarion-maven-repo/polarion.mvn",
                "releases": {
                  "enabled": "true",
                  "updatePolicy": "never"
                }
              }
            ]
          settings-servers: |
            [
              {
                "id": "s3",
                "username": "${env.S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY}",
                "password": "${env.S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY}"
              },
              {
                "id": "ossrh",
                "username": "${env.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_USERNAME}",
                "password": "${env.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_TOKEN}"
              },
              {
                "id": "gpg.passphrase",
                "passphrase": "${env.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PASSPHRASE}"
              }
            ]
          gpg-private-key: ${{ secrets.COM_SONATYPE_CENTRAL_POLARION_OPENSOURCE_GPG_PRIVATE_KEY }}
          cache-key: ${{ needs.build.outputs.cache_key }}
      - name: 📦 Deploy artifacts to Maven Central
        run: mvn --batch-mode -Dmaven.test.skip=true deploy -P gpg-sign -P nexus-staging
  deploy-github-packages:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
      packages: write
    env:
      S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY: ${{ secrets.S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY }}
      S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY: ${{ secrets.S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: 🧱 Setup Maven Action
        uses: s4u/setup-maven-action@2f53a7669c7543a045d0bb6c92436df0c5a726f8  # v1.14.0
        with:
          java-version: 17
          java-distribution: temurin
          checkout-fetch-depth: 1
          settings-repositories: |
            [
              {
                "id": "s3",
                "name": "s3.sbb.polarion.maven.repo",
                "url": "s3://sbb-polarion-maven-repo/polarion.mvn",
                "releases": {
                  "enabled": "true",
                  "updatePolicy": "never"
                }
              }
            ]
          settings-servers: |
            [
              {
                "id": "s3",
                "username": "${env.S3_SBB_POLARION_MAVEN_REPO_RW_ACCESS_KEY}",
                "password": "${env.S3_SBB_POLARION_MAVEN_REPO_RW_SECRET_ACCESS_KEY}"
              },
              {
                "id": "github",
                "username": "${env.GITHUB_ACTOR}",
                "password": "${env.GITHUB_TOKEN}"
              }
            ]
          settings-profiles: |
            [
              {
                "id": "deploy-github-packages",
                "properties": {
                  "altDeploymentRepository": "github::default::https://maven.pkg.github.com/${{ github.repository }}"
                }
              }
            ]
          cache-key: ${{ needs.build.outputs.cache_key }}
      - name: 📦 Deploy artifacts to GitHub Packages
        run: mvn --batch-mode -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true deploy -P deploy-github-packages
      - name: 📦 Upload assets to GitHub Release
        env:
          RELEASE_VERSION: ${{ needs.build.outputs.project_version }}
        if: ${{ !endsWith(env.RELEASE_VERSION, '-SNAPSHOT') }}
        run: |-
          gh release upload "v${RELEASE_VERSION}" "target/*-${RELEASE_VERSION}.jar" --clobber
